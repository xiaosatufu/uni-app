<template>
	<scroll-view class="page" :style="[windowHeight ? {height: windowHeight + 'px'} : '']" scroll-y="true">
    
    <text class="page-title">多人房间: {{roomId}}</text>
    
		<view class="liveroom">

      <view class="liveroom-cel liveroom-pusher">
        <TX-AgoraView class="liveroom-trtc" ref="maxTxAgoraView" 
          :channelId="roomId"
          :uid="uid"
		  :token="token"
        	enableVideo=true
        	enableAudio=true
			renderModel=1
        	@statechange="onPush"
        ></TX-AgoraView>

        <text class="liveroom-cel-name">我</text>
      </view>

      <view class="liveroom-cel liveroom-player" v-for="(item, index) in players" :key="index">
        <TX-AgoraView class="liveroom-trtc" :ref="'remoteUser' + item.uid" 
          :remoteUid="item.uid" renderModel=1></TX-AgoraView>

        <text class="liveroom-cel-name">{{item.uid}}</text>
      </view>

    </view>

	</scroll-view>
</template>

<script>
	
  
export default {
  data() {
    return {
      windowHeight: 0,
      roomId: 'magi',
	  token:'006621b96e8ed024737be0ef6ebc4c5c04cIABd3ELFqik+96m17Kmb7/6JarZnnty/AgziDjzA3n1ZKUl1z78AAAAAEABY6hql17jyXgEAAQDWuPJe',
      uid: 12345,
      players: []
    }
  },
  
  onLoad() {
	  
    this.uid = 1 + Math.ceil(Math.random()*1000000); 
    this.windowHeight = 667;
  },
  
  onReady() {
    this.join();
  },
  
  onResize() {
    // #ifdef APP-PLUS-NVUE
    this.resizeWinHeight()
    // #endif
  },
  
  onNavigationBarButtonTap() {
  	
  	uni.navigateBack({
  	    delta: 1,
  	    animationType: 'pop-out',
  	    animationDuration: 200
  	});
  },
  
  onBackPress() {
  	this.$refs.maxTxAgoraView.leaveChannel();
  },
  
  methods: {
  
    join(){
       //主要步骤如下：
       //1. 开启本地视频的预览画面，并开启声音
       this.$refs.maxTxAgoraView.joinChannel();
    },
    
    onPush(e){
        let result = e.detail
       console.log(result);
        switch (result.type) {
          case 'onFirstRemoteVideoDecoded':
            console.log('onFirstRemoteVideoDecoded');
            break;

          case 'onUserJoined':
            if (result.uid) this.addPlayer(result.uid)
            break;

          case 'onUserOffline':
            if (result.uid) this.removePlayer(result.uid)
            break;
        }
    },
    
    addPlayer(uid) {
	  console.log( 'addPlayer' + uid);
      this.players.push({
        uid: uid
      })
    },
    
    removePlayer(uid) {
      for (let i = 0; i < this.players.length; i++) {
        let d = this.players[i]
        if (d.uid === uid) {
          this.players.splice(i, 1)
          break
        }
      }
    },
    
    resizeWinHeight() {
      uni.getSystemInfo({
        success: (res) => {
          this.windowHeight = res.windowHeight
        }
      });
    },
  }
}
</script>

<style lang="scss">
.page {
  height: 100%;
  background-color: #271506;
}
.page-title {
  width: 750rpx;
  height: 80rpx;
  line-height: 80rpx;
  color: #fff;
  font-size: 28rpx;
  text-align: center;
}

.liveroom {
  flex-direction: row;
  flex-wrap: wrap;

  width: 750rpx;
}
$cel-width: 0.5 * 750rpx;
.liveroom-cel {
  width: $cel-width;
  height: 1.382 * $cel-width + 40rpx;
  padding: 20rpx;
}
.liveroom-trtc {
  width: $cel-width - 40rpx;
  height: 1.382 * $cel-width - 40rpx;
  background-color: #444;
}

.liveroom-cel-name {
  width: $cel-width - 40rpx;
  height: 40rpx;
  line-height: 40rpx;
  text-align: center;
  color: #999;
  font-size: 24rpx;
}
</style>
