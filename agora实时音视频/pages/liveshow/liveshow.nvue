<template>
	<view class="chatBox" >
		<TX-AgoraView 
			:channelId="roomId"
			:uid="uid"
			:renderModel="renderModel"
			channelProfile=1
			:clientRole="role"
			ref="maxTxAgoraView" 
			class="maxTxAgoraView" 
			:style="{height:windowHeight}"
			:contrastLevel="beautyValue"
			:lighteningLevel="beautyValue"
			:smoothneesLevel="beautyValue"
			:rednessLevel="beautyValue"
			:remoteUid="hisId"
			publishStreamUrl = ""
			:enableVideo="enable"
			:enableAudio="enable"
			@statechange="onPush"
		></TX-AgoraView>
	
    <view class="header">
    	<text @click="changeMode" class="viewIco">&#xe600;</text>
    	<TX-AgoraView
    	 ref="minTxAgoraView" 
    	 class="minTxAgoraView" 
		 :localUid="localUid"
		 :remoteUid="cohostId"
    	 :style="minStyle"></TX-AgoraView>
    </view>
    
    <view class="foot-content">
      <chat-room id="chatRoom" ref="chatRoom" class="chat-room" :roomId="roomId"></chat-room>
    </view>
    
		<view class="tools">
			<view class="circleBoxAll">
				<view class="circleBox" @click="menuAction()">
					<text class="circleIco phone">&#xe626;</text>
					<text class="hint">菜单操作</text>
				</view>
				<view class="circleBox" @click="startAll()">
					<text class="circleIco phone">&#xe626;</text>
					<text class="hint">加入房间</text>
				</view>
				<view class="circleBox" @click="stopAll">
					<text class="circleIco phone">&#xe6f9;</text>
					<text class="hint">离开房间</text>
				</view>
				<view class="circleBox" @click="switchCamera()">
					<text class="circleIco phone">&#xe6aa;</text>
					<text class="hint">转换摄像头</text>
				</view>
			</view>
		</view>
		<view class="showSlider" ref="showSlider">
			<slider :value="beauty" :max="100" :min="0" @change="sliderChange" activeColor="#ff7f23" backgroundColor="#bfbfbf" block-color="#e94267" block-size="20"/>
		</view>
		
		
	</view>
</template>

<script>
import chatRoom from "../../components/chat-room"

const agoraKit = uni.requireNativePlugin('TX-AgoraEngineKit')
export default {
  
  components: {
    chatRoom
  },
  
	data() {
		return {
			uid :0,
			role:1,
			roomId: 1,
			hisId:0,
			cohostId:0,
			localUid:0,
			windowHeight:0,
			beauty:0,
			beautyValue:0,
			mode:"me",//大小窗口显示模式
			enable:false,
			renderModel:1
		}
	},
	onLoad(params) {
		// 获取上一个页面传入的参数
	 
		this.windowHeight = uni.getSystemInfoSync().windowHeight;
		//主要步骤如下：
		//1. 开启本地视频的预览画面，并开启声音
		this.uid  =  1 + Math.ceil(Math.random()*1000000);
		this.role = params.role;
		this.renderModel = params.renderModel;
		if (this.role == 1) {
		   this.enable = true ;
		}else {
		   this.enable = false;
		}
		//设备的唯一标识
	},
	onReady() {
		this.join();
	},
	onNavigationBarButtonTap() {
		
		uni.navigateBack({
		    delta: 1,
		    animationType: 'pop-out',
		    animationDuration: 200
		});
	},
	onBackPress() {
		this.$refs.maxTxAgoraView.leaveChannel();
		this.$refs.maxTxAgoraView.destroyRtc();
	},
	methods: {
		switchCamera(){
			 this.$refs.maxTxAgoraView.switchCamera();
		},
		startAll(){
			this.$refs.maxTxAgoraView.joinChannel();
			
		},
		stopAll(){
			this.$refs.maxTxAgoraView.leaveChannel();
		},
		menuAction(){
			var me = this;
			 if(this.role == 2) {
				 uni.showActionSheet({
				 	itemList: ["连麦", "停止连麦"],
				 	success(res) {
				 		var index = res.tapIndex;
				 		if (index == 0) {
							me.localUid = me.uid;
				 		    agoraKit.setClientRole(1);
				 		} else if (index == 1) {
							me.localUid = 0;
							agoraKit.setClientRole(2);
				 		}
				 		
				 		
				 	}
				 })
			  }else if (this.role == 1) {
				  uni.showActionSheet({
				  	itemList: ["播放音乐","播放音效"],
				  	success(res) {
				  		var index = res.tapIndex;
				  		if (index == 0) {
				  		   agoraKit.downloadUrls("",result=>{
				  		   	console.log(result);
							agoraKit.adjustAudioMixingVolume(10);
							agoraKit.startAudioMixing({
								filePath:result.filePath,
								loopBack:false,
								replace:false,
								cycle:-1
							});
				  		   	
				  		   });
				  		} else if (index == 1) {
				  			agoraKit.downloadUrls("",result=>{
				  				console.log(result);
								
								agoraKit.playEffect({
									id:101,
									filePath:result.filePath,
									loopCount:0,
									pitch:1,
									pan:0,
									gain:50,
									publish:true
								});
				  				
				  			});	
				  		}
				  		
				  		
				  	}
				  })
			  }
			
		},
		hideKeyboard(){
			console.log('hideKeyboard');
		},
		sliderChange(e){
			console.log(e.detail.value);
			this.beauty = e.detail.value;
			this.beautyValue = this.beauty / 100
		},
		
		onPush(e){
		
			var result = e.detail;
			console.log(result);
			switch (result.type) {
				case 'onFirstRemoteVideoDecoded':
					console.log('onFirstRemoteVideoDecoded');
					break;
				case 'onUserJoined':
				    if (this.role == 2) {
						this.hisId = result.uid;
					}else {
						this.cohostId = result.uid;
					}
					break;
			}
		},
		
		join(){
			
		   this.$refs.maxTxAgoraView.joinChannel();
			
		   
		}
	},
	beforeCreate : function(){
		// #ifdef APP-PLUS-NVUE
		const domModule = weex.requireModule('dom')
		domModule.addRule('fontFace', {
			'fontFamily': "iconfont",
			'src': 'url("'+"file:/" + plus.io.convertLocalFileSystemURL("_www/static/iconfont.ttf")+'")'
		});
		// #endif
	},
}
</script>

<style lang="scss">
.chatBox{
	width: 750rpx;
	flex: 1;
	flex-direction: column;
	background-color:#111111;
}
.header{
	width: 750rpx;
	position: fixed;
	top:0 ;
	left: 0;
	margin:20rpx 0;
	flex-direction: row;
	justify-content: space-between;
}
.viewIco{
	margin-left: 20rpx;
	font-family:iconfont;
	font-size:60rpx;
	color: #FFFFFF;
}
.maxTxAgoraView{
	width:750rpx;
	background-color:#111111;
	position: fixed;
	top: 0;
	right: 0;
}
.minTxAgoraView{
	width: 220rpx;
	height: 300rpx;
	position: fixed;
	background-color:#000000;
	right:20rpx;
	top:20rpx;

	border-top-left-radius: 10px;
	border-top-right-radius: 10px;
	border-bottom-left-radius: 10px;
	border-bottom-right-radius: 10px;

	border-style: solid;
	border-width: 1px; 
	border-color: rgba(255,255,255,.2);
	
}
.foot{
	width: 710rpx;
	position: fixed;
	bottom:0;
	left: 0;
	margin:20rpx;
	align-items: center;
	justify-content: center;
	flex-direction: row;
	flex-direction: column;
}

.circleBoxAll{
	// flex-direction: row;
	justify-content: center;
	align-items: center;
}
.inputBoxAll{
	flex-direction: row;
	align-items: center;
}
.inputBox{
	flex-direction: row;
	margin: 15rpx;
	padding: 15rpx;
	background-color: #FFFFFF;
	border-radius: 6px;
}
.inputTitle{
	height:80rpx;
	line-height: 80rpx;
}
.input{
	height: 80rpx;
	width: 340rpx;
	font-size:30rpx;
	padding: 15rpx;
}
.join{
	background-color: #DD524D;
	width: 160rpx;
	height: 120rpx;
	line-height: 120rpx;
	text-align: center;
	color: #FFFFFF;
	border-radius: 10px;
}
.circleBox{
	width: 150rpx;
	padding: 10rpx 0;
	margin:10rpx;
	align-items: center;
	flex-direction: column;
  text-align: center;
}
.circleIco{
	font-size: 36rpx;
	width:64rpx;
	height:64rpx;
	line-height: 64rpx;
	border-radius: 500px;
	border-style: solid;
	border-width: 1px; 
	border-color:#FFFFFF;
	text-align: center;
	font-family:iconfont;
	color: #FFFFFF;
}
.phone{
	background-color:#c5433a;
	border-style: solid;
	border-width: 1px; 
	border-color:#c5433a;
}
.hint{
	font-size: 22rpx;
	color: #FFFFFF;
	padding-top: 20rpx;
}


.tools {
  position: fixed;
  right: 0;
  bottom: 100rpx;
  z-index: 11;

  width: 150rpx;
}

.showSlider{
	position: fixed;
	right: 180rpx;
	bottom: 100rpx;
	z-index:12;
	width: 200rpx;
}
.foot-content {
  
  /* #ifndef APP-PLUS-NVUE */
  display: flex;
  /* #endif */
  flex-direction: column-reverse;
  
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  
  height: 500rpx;         // 聊天区最高显示的高度
  overflow: hidden;
  
  padding-top: 20rpx;
  padding-right: 40rpx;
  padding-bottom: 20rpx;
  padding-left: 40rpx;
}
</style>
